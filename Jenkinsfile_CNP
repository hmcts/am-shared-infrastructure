#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

withInfraPipeline("am") {
    after('checkout') {
    onMaster {
      withCredentials([usernamePassword(credentialsId: 'jenkins-github-hmcts-api-token', usernameVariable: 'USERNAME', passwordVariable: 'BEARER_TOKEN')]) {
        try {
          
          def url = "https://api.github.com/repos/hmcts/am-shared-infrastructure/pulls"
          def response = sh(script: "curl -s $url", returnStdout: true).trim()
          
          echo $url
          
          
        //   sh '''
        //     set -e
        //     git remote set-url origin $(git config remote.origin.url | sed "s/github.com/${BEARER_TOKEN}@github.com/g")
        //     git fetch origin demo:demo
        //     git push --force origin HEAD:demo
        //     git fetch origin perftest:perftest
        //     git push --force origin HEAD:perftest
        //   '''
        } catch (err) {

          // notifyBuildEvent channel: '#fpla-tech', color: 'warning', message: 'Failed to update demo or perftest branch'
        }
      }
    }
}